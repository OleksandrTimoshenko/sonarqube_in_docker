- name: server
  hosts: all
  become: True
  gather_facts: no
  vars:
    ansible_python_interpreter: /usr/bin/python3
    project_name: "sonarqube"

  pre_tasks:
    - name: Wait for system to become reachable
      wait_for_connection:

    - name: Gather facts for first time
      setup:
    - apt:
        upgrade: yes
        update_cache: yes
        cache_valid_time: 86400 #One day
    - name: Install pip3
      apt:
        name: python3-pip
        state: present
        update_cache: yes
    - pip:
        name: "{{ packeges }}"
        executable: pip3
      vars:
        packeges:
          - docker
          - docker-compose
          - jsondiff
  roles:
    - role: geerlingguy.docker
      docker_install_compose: true

  tasks:

    - name: Init a new swarm with default parameters
      docker_swarm:
        state: present
        # only for local testing with Vagrant
        advertise_addr: "192.168.0.160"

    - name: Copy compose file
      copy:
        src: "./{{ item }}"
        dest: "/opt/{{ item }}"
      loop:
        - docker-compose.yml

    - name: Delete old Nginx directory
      file:
        path: /opt/nginx/
        state: absent

    - name: Create new Nginx directiry
      file:
        path: /opt/nginx
        state: directory
        mode: 0775

    - name: Copy Nginx config
      copy:
        src: ./nginx/{{ item }}
        dest: /opt/nginx/{{ item }}
      with_items:
        - sonarqube.conf

    - name: Copy sequires script
      copy:
        src: ./requires.sh
        dest: /opt/requires.sh
        mode: u+x

    - name: set host requires for sonar
      shell: /opt/requires.sh

    - name: Copy .env file
      copy:
        src: ./.env
        dest: /opt/.env

    - name: Deploy sonarqube stack from a compose file
      docker_stack:
        state: present
        prune: yes
        name: "{{ project_name }}-stack"
        with_registry_auth: yes
        compose:
          - /opt/docker-compose.yml

    # The first try can fail, because Nginx can`t find configs
    - name: Update Nginx service
      shell: docker service update --force "{{ project_name }}-stack_nginx"
      register: result
      retries: 2
      delay: 3
      until: result is not failed